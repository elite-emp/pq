Slip 1 : 

Q.1) .HTML

<!DOCTYPE html>
<html lang="en" ng-app="myApp">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>AngularJS Addition</title>

<script
src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body ng-controller="myCtrl">

<!-- Step 1: Initialize numbers using ng-init -->
<div ng-init="num1 = 0; num2 = 0; sum = 0;">

<!-- Step 2: Input fields for numbers -->
<label for="num1">Enter first number:</label>
<input type="number" id="num1" ng-model="num1">
<br><br>

<label for="num2">Enter second number:</label>
<input type="number" id="num2" ng-model="num2">
<br><br>

<!-- Step 3: Show sum using ng-bind -->
<h3>The sum is: <span ng-bind="sum"></span></h3>

<!-- Step 4: Button to calculate sum -->
<button ng-click="calculateSum()" ng-disabled="num1 == 0 || num2 ==
0">Add</button>

<!-- Step 5: Display a message when sum is greater than 0 using ng-show -->
<div ng-show="sum > 0">
<p>Calculation completed successfully!</p>
</div>

</div>

<script>
// AngularJS Application and Controller
var app = angular.module('myApp', []);

app.controller('myCtrl', function($scope) {
// Function to calculate the sum of two numbers
$scope.calculateSum = function() {
$scope.sum = parseFloat($scope.num1) + parseFloat($scope.num2);
};
});
</script>

</body>
</html>

Q.2) .js

const fs = require('fs').promises; // Using fs.promises API for file operations

// Function to read a file asynchronously using Promises
function readFile(fileName) {
return fs.readFile(fileName, 'utf8')
.then(data => {
console.log(`Successfully read ${fileName}:`);
return data; // Return file content
})
.catch(err => {
console.error(`Error reading file ${fileName}:`, err);
throw err; // Propagate error
});
}

// Function to read multiple files asynchronously using async/await
async function readFiles() {

try {
// Wait for all file readings to complete
const data1 = await readFile('file1.txt');
const data2 = await readFile('file2.txt');
const data3 = await readFile('file3.txt');

// Log the file contents
console.log(`File 1 content: ${data1}`);
console.log(`File 2 content: ${data2}`);
console.log(`File 3 content: ${data3}`);

} catch (err) {
console.error('Error during file read operations:', err);
}
}

// Start reading the files
readFiles();
Slip 12 :

Q.1) .html

<!DOCTYPE html>
<html lang="en">
<head>

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Employee Details</title>
<!-- Include AngularJS from CDN -->
<script
src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
<style>
table, th, td {
border: 1px solid black;
border-collapse: collapse;
padding: 10px;
}
th {
text-align: left;
}
</style>
</head>
<body ng-app="employeeApp" ng-controller="employeeController">

<h2>Employee Details</h2>

<!-- Table to display employee details -->

<table>
<thead>
<tr>
<th>Employee ID</th>
<th>Employee Name</th>
<th>Pin Code</th>
<th>Address</th>
</tr>
</thead>
<tbody>
<tr ng-repeat="employee in employees">
<td>{{ employee.id }}</td>
<td>{{ employee.name }}</td>
<td>{{ employee.pinCode }}</td>
<td>{{ employee.address }}</td>
</tr>
</tbody>
</table>

<script>
// AngularJS application
var app = angular.module('employeeApp', []);

// AngularJS Controller
app.controller('employeeController', function($scope) {
// Array of employee details
$scope.employees = [
{id: 'E001', name: 'Alice', pinCode: '12345', address: '123 Elm Street'},
{id: 'E002', name: 'Bob', pinCode: '23456', address: '456 Oak Avenue'},
{id: 'E003', name: 'Charlie', pinCode: '34567', address: '789 Pine Road'},
{id: 'E004', name: 'David', pinCode: '45678', address: '101 Maple Blvd'},
{id: 'E005', name: 'Eva', pinCode: '56789', address: '202 Birch Lane'}
];
});
</script>

</body>
</html>

Q.2) .js

// app.js
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
// Middleware to parse incoming JSON data
app.use(bodyParser.json());
// In-memory database to store users (For demo purposes)
let users = [];
// POST route to create a new user
app.post('/users', (req, res) => {
const { name, email, age } = req.body;
// Check if all required fields are provided
if (!name || !email || !age) {
return res.status(400).json({ message: "Name, email, and age are required." });
}
// Create a new user object
const newUser = {
id: users.length + 1, // Auto-incremented ID
name,
email,
age
};
// Add the new user to the users array
users.push(newUser);
// Send response back to the client
res.status(201).json({
message: "User created successfully",
user: newUser
});
});
// Route to get all users (optional, for testing purposes)
app.get('/users', (req, res) => {
res.status(200).json(users);
});
// Set the server to listen on port 3000

app.listen(3000, () => {
console.log('Server running on port 3000');
});
Slip 6 :

Q.1) .js

// Importing required modules

const express = require('express');
const app = express();
const port = 3000;

// Middleware to parse JSON data from the body of requests
app.use(express.json());

// In-memory product data (as a substitute for a database)
let products = [];

// Route to Create a new product (POST)
app.post('/products', (req, res) => {
const { name, price } = req.body;

// Simple validation
if (!name || !price) {
return res.status(400).json({ message: 'Name and price are required.' });
}

// Creating a new product object
const newProduct = {
id: products.length + 1, // simple id generation

name,
price
};

// Adding the new product to the in-memory database
products.push(newProduct);

// Sending back a response with the new product
res.status(201).json({ message: 'Product created successfully', product: newProduct
});
});

// Route to Read all products (GET)
app.get('/products', (req, res) => {
res.status(200).json(products);
});

// Starting the server
app.listen(port, () => {
console.log(`Server is running on http://localhost:${port}`);
});

Q.2) .js
// Sample data: Array of company objects
const companies = [
{ id: 1, name: "Company A", workforce: 25 },
{ id: 2, name: "Company B", workforce: 50 },
{ id: 3, name: "Company C", workforce: 20 },
{ id: 4, name: "Company D", workforce: 35 },
];

// Use the find method to find the first company with a workforce greater than 30
const companyWithLargeWorkforce = companies.find(company =>
company.workforce > 30);

if (companyWithLargeWorkforce) {
console.log(`Found a company with a workforce greater than 30:`);
console.log(`Company ID: ${companyWithLargeWorkforce.id}`);
console.log(`Company Name: ${companyWithLargeWorkforce.name}`);
console.log(`Workforce: ${companyWithLargeWorkforce.workforce}`);
} else {
console.log("No company found with a workforce greater than 30.");
}